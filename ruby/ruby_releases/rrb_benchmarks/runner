#!/bin/bash
set -e
set -x

cd /ruby-bench-suite
git pull --rebase origin master
cp -r discourse/rails_ruby_bench/patches/* /discourse/config/initializers/ # Do we need this for Rails Ruby Bench?

until pg_isready -h ${POSTGRES_PORT_5432_TCP_ADDR} -p ${POSTGRES_PORT_5432_TCP_PORT}; do
  echo "$(date) - still trying to connect to Postgres server"
  sleep 1
done

until redis-cli -h ${REDIS_PORT_6379_TCP_ADDR} -p ${REDIS_PORT_6379_TCP_PORT} ping; do
  echo "$(date) - still trying to connect to Redis server"
  sleep 1
done

echo "Using Ruby $RUBY_VERSION"
rbenv global $RUBY_VERSION

echo "Checking RUBY_VERSION in environment"
echo "RUBY_VERSION=$RUBY_VERSION"

cd /
createdb -T template0 -h "$POSTGRES_PORT_5432_TCP_ADDR" -p "$POSTGRES_PORT_5432_TCP_PORT" -U postgres discourse_profile

cd /discourse
git reset --hard $DISCOURSE_COMMIT_HASH
#mv /database.yml config/database.yml
mv /discourse.conf config/discourse.conf
mv /ruby-bench-suite/discourse/rails_ruby_bench/bench.rb script/bench.rb

# For faster Bundle install
echo "gem: --no-ri --no-rdoc" > ~/.gemrc
gem install bundler facter
rbenv rehash
mv /cache /discourse/vendor/cache
mkdir -p public/uploads || echo "OK"  # Create if it doesn't exist
bundle install --without development:test -j4 --no-cache --no-prune

# Turn off CSRF protection for Discourse in the benchmark. I have no idea why
# user_simulator's CSRF handling stopped working between Discourse 1.7.X and
# 1.8.0.beta10, but it clearly did. This is a horrible workaround and should
# be fixed when I figure out the problem.
sed -i 's/protect_from_forgery/#protect_from_forgery/' /discourse/app/controllers/application_controller.rb

cd /rails_ruby_bench/
git pull
git reset --hard $RRB_COMMIT_HASH
bundle install
ln -s /discourse work/discourse  # RRB expects to find discourse in a "work" subdirectory

cd /discourse
export RAILS_ENV=profile
cp /database_migration.yml config/database.yml
bundle exec rake db:drop || echo "OK..."
bundle exec rake db:create
bundle exec rake db:migrate
ruby /rails_ruby_bench/seed_db_data.rb  # No bundle exec - we need Gabbler from RRB
cp /normal_database.yml config/database.yml

echo "Running benchmarks with Ruby $RUBY_VERSION"
cd /discourse
ruby script/bench.rb -r /rails_ruby_bench
