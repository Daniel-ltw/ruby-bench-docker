#!/bin/bash
set -e

while ! exec 6<>/dev/tcp/${POSTGRES_PORT_5432_TCP_ADDR}/${POSTGRES_PORT_5432_TCP_PORT}; do
  echo "$(date) - still trying to connect to Postgres server"
  sleep 1
done

while ! exec 6<>/dev/tcp/${MYSQL_PORT_3306_TCP_ADDR}/${MYSQL_PORT_3306_TCP_PORT}; do
  echo "$(date) - still trying to connect to Mysql server"
  sleep 1
done

dropdb --if-exists -h "$POSTGRES_PORT_5432_TCP_ADDR" -p "$POSTGRES_PORT_5432_TCP_PORT" -U postgres rubybench
createdb -h "$POSTGRES_PORT_5432_TCP_ADDR" -p "$POSTGRES_PORT_5432_TCP_PORT" -U postgres rubybench
echo "DROP DATABASE IF EXISTS rubybench" | mysql -u root -h "$MYSQL_PORT_3306_TCP_ADDR" -P "MYSQL_PORT_3306_TCP_PORT"
echo "CREATE DATABASE rubybench" | mysql -u root -h "$MYSQL_PORT_3306_TCP_ADDR" -P "MYSQL_PORT_3306_TCP_PORT"

echo "gem: --no-ri --no-rdoc" > ~/.gemrc
gem update bundler

cd /ruby-bench-suite/sequel
git pull --rebase origin master

if [ "$INCLUDE_PATTERNS" ]; then
  PATTERNS="--pattern $INCLUDE_PATTERNS"
fi

cd /sequel
git pull --rebase origin master

if [ -z "$SEQUEL_COMMIT_HASH" ]; then
  echo "Running benchmarks using latest Sequel commit"
else
  echo "Running benchmarks using Sequel commit $SEQUEL_COMMIT_HASH"
  git reset --hard $SEQUEL_COMMIT_HASH
  bundle install -j4 --without test job doc
fi

cd /ruby-bench-suite/sequel
sed -i "s/gem 'sequel', github: 'jeremyevans\/sequel', branch: 'master'/gem 'sequel', path: '\/sequel'/g" Gemfile
bundle install -j4

cd /ruby-bench-suite/support/setup
bundle install

echo "Running benchmarks with Sequel $SEQUEL_COMMIT_HASH"
cd /ruby-bench-suite/sequel/benchmarks
ruby driver.rb $PATTERNS
